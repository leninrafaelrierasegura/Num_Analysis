"0","# Function to compute the eigenfunctions "
"0","tadpole.eig <- function(k,graph){"
"0","x1 <- c(0,graph$get_edge_lengths()[1]*graph$mesh$PtE[graph$mesh$PtE[,1]==1,2]) "
"0","x2 <- c(0,graph$get_edge_lengths()[2]*graph$mesh$PtE[graph$mesh$PtE[,1]==2,2]) "
"0",""
"0","if(k==0){ "
"0","  f.e1 <- rep(1,length(x1)) "
"0","  f.e2 <- rep(1,length(x2)) "
"0","  f1 = c(f.e1[1],f.e2[1],f.e1[-1], f.e2[-1]) "
"0","  f = list(phi=f1/sqrt(3)) "
"0","  "
"0","} else {"
"0","  f.e1 <- -2*sin(pi*k*1/2)*cos(pi*k*x1/2) "
"0","  f.e2 <- sin(pi*k*x2/2)                  "
"0","  "
"0","  f1 = c(f.e1[1],f.e2[1],f.e1[-1], f.e2[-1]) "
"0","  "
"0","  if((k %% 2)==1){ "
"0","    f = list(phi=f1/sqrt(3)) "
"0","  } else { "
"0","    f.e1 <- (-1)^{k/2}*cos(pi*k*x1/2)"
"0","    f.e2 <- cos(pi*k*x2/2)"
"0","    f2 = c(f.e1[1],f.e2[1],f.e1[-1],f.e2[-1]) "
"0","    f <- list(phi=f1,psi=f2/sqrt(3/2))"
"0","  }"
"0","}"
"0",""
"0","return(f)"
"0","}"
